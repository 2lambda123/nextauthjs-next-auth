"use strict";(self.webpackChunknext_auth_docs=self.webpackChunknext_auth_docs||[]).push([[9522],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return u}});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var m=n.createContext({}),p=function(e){var t=n.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(m.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,m=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=p(a),u=i,h=c["".concat(m,".").concat(u)]||c[u]||l[u]||r;return a?n.createElement(h,o(o({ref:t},d),{},{components:a})):n.createElement(h,o({ref:t},d))}));function u(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=c;var s={};for(var m in t)hasOwnProperty.call(t,m)&&(s[m]=t[m]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var p=2;p<r;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},6646:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return s},contentTitle:function(){return m},metadata:function(){return p},toc:function(){return d},default:function(){return c}});var n=a(7462),i=a(3366),r=(a(7294),a(3905)),o=["components"],s={id:"prisma-legacy",title:"Prisma Adapter (Legacy)"},m="Prisma (Legacy)",p={unversionedId:"adapters/prisma-legacy",id:"version-v3/adapters/prisma-legacy",isDocsHomePage:!1,title:"Prisma Adapter (Legacy)",description:"You can also use NextAuth.js with the built-in Adapter for Prisma. This is included in the core next-auth package at the moment. The other adapter needs to be installed from its own additional package.",source:"@site/versioned_docs/version-v3/adapters/prisma-legacy.md",sourceDirName:"adapters",slug:"/adapters/prisma-legacy",permalink:"/v3/adapters/prisma-legacy",editUrl:"https://github.com/nextauthjs/docs/edit/main/versioned_docs/version-v3/adapters/prisma-legacy.md",tags:[],version:"v3",lastUpdatedBy:"Bal\xe1zs Orb\xe1n",lastUpdatedAt:1643982356,formattedLastUpdatedAt:"2/4/2022",frontMatter:{id:"prisma-legacy",title:"Prisma Adapter (Legacy)"},sidebar:"version-v3/docs",previous:{title:"Prisma Adapter",permalink:"/v3/adapters/prisma"},next:{title:"DynamoDB Adapter",permalink:"/v3/adapters/dynamodb"}},d=[{value:"Setup",id:"setup",children:[{value:"Generate Client",id:"generate-client",children:[],level:3},{value:"Custom Models",id:"custom-models",children:[],level:3}],level:2}],l={toc:d};function c(e){var t=e.components,a=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,n.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"prisma-legacy"},"Prisma (Legacy)"),(0,r.kt)("p",null,"You can also use NextAuth.js with the built-in Adapter for ",(0,r.kt)("a",{parentName:"p",href:"https://www.prisma.io/docs/"},"Prisma"),". This is included in the core ",(0,r.kt)("inlineCode",{parentName:"p"},"next-auth")," package at the moment. The other adapter needs to be installed from its own additional package."),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"You may have noticed there is a ",(0,r.kt)("inlineCode",{parentName:"p"},"prisma")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"prisma-legacy")," adapter. This is due to historical reasons, but the code has mostly converged so that there is no longer much difference between the two. The legacy adapter, however, does have the ability to rename tables which the newer version does not."))),(0,r.kt)("p",null,"To use this Adapter, you need to install Prisma Client and Prisma CLI:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npm install @prisma/client\nnpm install prisma --save-dev\n")),(0,r.kt)("p",null,"Configure your NextAuth.js to use the Prisma Adapter:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="pages/api/auth/[...nextauth].js"',title:'"pages/api/auth/[...nextauth].js"'},'import NextAuth from "next-auth"\nimport Providers from "next-auth/providers"\nimport Adapters from "next-auth/adapters"\nimport { PrismaClient } from "@prisma/client"\n\nconst prisma = new PrismaClient()\n\nexport default NextAuth({\n  providers: [\n    Providers.Google({\n      clientId: process.env.GOOGLE_CLIENT_ID,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n    }),\n  ],\n  adapter: Adapters.Prisma.Adapter({ prisma }),\n})\n')),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"While Prisma includes an experimental feature in the migration command that is able to generate SQL from a schema, creating tables and columns using the provided SQL is currently recommended instead as SQL schemas automatically generated by Prisma may differ from the recommended schemas."))),(0,r.kt)("p",null,"Schema for the Prisma Adapter"),(0,r.kt)("h2",{id:"setup"},"Setup"),(0,r.kt)("p",null,"Create a schema file in ",(0,r.kt)("inlineCode",{parentName:"p"},"prisma/schema.prisma")," similar to this one:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="schema.prisma"',title:'"schema.prisma"'},'generator client {\n  provider = "prisma-client-js"\n}\n\ndatasource db {\n  provider = "sqlite"\n  url      = "file:./dev.db"\n}\n\nmodel Account {\n  id                 Int       @id @default(autoincrement())\n  compoundId         String    @unique @map(name: "compound_id")\n  userId             Int       @map(name: "user_id")\n  providerType       String    @map(name: "provider_type")\n  providerId         String    @map(name: "provider_id")\n  providerAccountId  String    @map(name: "provider_account_id")\n  refreshToken       String?   @map(name: "refresh_token")\n  accessToken        String?   @map(name: "access_token")\n  accessTokenExpires DateTime? @map(name: "access_token_expires")\n  createdAt          DateTime  @default(now()) @map(name: "created_at")\n  updatedAt          DateTime  @default(now()) @map(name: "updated_at")\n\n  @@index([providerAccountId], name: "providerAccountId")\n  @@index([providerId], name: "providerId")\n  @@index([userId], name: "userId")\n  @@map(name: "accounts")\n}\n\nmodel Session {\n  id           Int      @id @default(autoincrement())\n  userId       Int      @map(name: "user_id")\n  expires      DateTime\n  sessionToken String   @unique @map(name: "session_token")\n  accessToken  String   @unique @map(name: "access_token")\n  createdAt    DateTime @default(now()) @map(name: "created_at")\n  updatedAt    DateTime @default(now()) @map(name: "updated_at")\n\n  @@map(name: "sessions")\n}\n\nmodel User {\n  id            Int       @id @default(autoincrement())\n  name          String?\n  email         String?   @unique\n  emailVerified DateTime? @map(name: "email_verified")\n  image         String?\n  createdAt     DateTime  @default(now()) @map(name: "created_at")\n  updatedAt     DateTime  @default(now()) @map(name: "updated_at")\n\n  @@map(name: "users")\n}\n\nmodel VerificationRequest {\n  id         Int      @id @default(autoincrement())\n  identifier String\n  token      String   @unique\n  expires    DateTime\n  createdAt  DateTime @default(now()) @map(name: "created_at")\n  updatedAt  DateTime @default(now()) @map(name: "updated_at")\n\n  @@map(name: "verification_requests")\n}\n\n\n')),(0,r.kt)("h3",{id:"generate-client"},"Generate Client"),(0,r.kt)("p",null,"Once you have saved your schema, use the Prisma CLI to generate the Prisma Client:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npx prisma generate\n")),(0,r.kt)("p",null,"To configure you database to use the new schema (i.e. create tables and columns) use the ",(0,r.kt)("inlineCode",{parentName:"p"},"prisma migrate")," command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npx prisma migrate dev\n")),(0,r.kt)("p",null,"To generate a schema in this way with the above example code, you will need to specify your database connection string in the environment variable ",(0,r.kt)("inlineCode",{parentName:"p"},"DATABASE_URL"),". You can do this by setting it in a ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file at the root of your project."),(0,r.kt)("p",null,"As this feature is experimental in Prisma, it is behind a feature flag. You should check your database schema manually after using this option. See the ",(0,r.kt)("a",{parentName:"p",href:"https://www.prisma.io/docs/"},"Prisma documentation")," for information on how to use ",(0,r.kt)("inlineCode",{parentName:"p"},"prisma migrate"),"."),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"If you experience issues with Prisma opening too many database connections in local development mode (e.g. due to Hot Module Reloading) you can use an approach like this when initalising the Prisma Client:"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="pages/api/auth/[...nextauth].js"',title:'"pages/api/auth/[...nextauth].js"'},'let prisma\n\nif (process.env.NODE_ENV === "production") {\n  prisma = new PrismaClient()\n} else {\n  if (!global.prisma) {\n    global.prisma = new PrismaClient()\n  }\n  prisma = global.prisma\n}\n')))),(0,r.kt)("h3",{id:"custom-models"},"Custom Models"),(0,r.kt)("p",null,"You can add properties to the schema and map them to any database column names you wish, but you should not change the base properties or types defined in the example schema."),(0,r.kt)("p",null,"The model names themselves can be changed with a configuration option, and the datasource can be changed to anything supported by Prisma."),(0,r.kt)("p",null,"You can use custom model names by using the ",(0,r.kt)("inlineCode",{parentName:"p"},"modelMapping")," option (shown here with default values)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="pages/api/auth/[...nextauth].js"',title:'"pages/api/auth/[...nextauth].js"'},"...\nadapter: Adapters.Prisma.Adapter({\n  prisma,\n  modelMapping: {\n    User: 'user',\n    Account: 'account',\n    Session: 'session',\n    VerificationRequest: 'verificationRequest'\n  }\n})\n...\n")))}c.isMDXComponent=!0}}]);