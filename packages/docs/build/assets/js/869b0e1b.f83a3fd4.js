"use strict";(self.webpackChunknext_auth_docs=self.webpackChunknext_auth_docs||[]).push([[7888],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=d(n),m=a,f=p["".concat(s,".").concat(m)]||p[m]||u[m]||i;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var d=2;d<i;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5420:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return c},default:function(){return p}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={id:"creating-a-database-adapter",title:"Create an adapter"},s=void 0,d={unversionedId:"tutorials/creating-a-database-adapter",id:"tutorials/creating-a-database-adapter",isDocsHomePage:!1,title:"Create an adapter",description:"Using a custom adapter you can connect to any database back-end or even several different databases. Official adapters created and maintained by our community can be found in the adapters repository. Feel free to add a custom adapter from your project to the repository, or even become a maintainer of a certain adapter. Custom adapters can still be created and used in a project without being added to the repository.",source:"@site/docs/tutorials/creating-a-database-adapter.md",sourceDirName:"tutorials",slug:"/tutorials/creating-a-database-adapter",permalink:"/tutorials/creating-a-database-adapter",editUrl:"https://github.com/nextauthjs/docs/edit/main/docs/tutorials/creating-a-database-adapter.md",tags:[],version:"current",lastUpdatedBy:"Bal\xe1zs Orb\xe1n",lastUpdatedAt:1643982356,formattedLastUpdatedAt:"2/4/2022",frontMatter:{id:"creating-a-database-adapter",title:"Create an adapter"}},c=[{value:"How to create an adapter",id:"how-to-create-an-adapter",children:[{value:"Example code",id:"example-code",children:[],level:3},{value:"Required methods",id:"required-methods",children:[],level:3},{value:"Unimplemented methods",id:"unimplemented-methods",children:[],level:3}],level:2}],u={toc:c};function p(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Using a custom adapter you can connect to any database back-end or even several different databases. Official adapters created and maintained by our community can be found in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/nextauthjs/adapters"},"adapters repository"),". Feel free to add a custom adapter from your project to the repository, or even become a maintainer of a certain adapter. Custom adapters can still be created and used in a project without being added to the repository."),(0,i.kt)("h2",{id:"how-to-create-an-adapter"},"How to create an adapter"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"See the code below for practical example.")),(0,i.kt)("h3",{id:"example-code"},"Example code"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'/** @return { import("next-auth/adapters").Adapter } */\nexport default function MyAdapter(client, options = {}) {\n  return {\n    async createUser(user) {\n      return\n    },\n    async getUser(id) {\n      return\n    },\n    async getUserByEmail(email) {\n      return\n    },\n    async getUserByAccount({providerAccountId, provider}) {\n      return\n    },\n    async updateUser(user) {\n      return\n    },\n    async deleteUser(userId) {\n      return\n    },\n    async linkAccount(account) {\n      return\n    },\n    async unlinkAccount({ providerAccountId, provider}) {\n      return\n    },\n    async createSession({ sessionToken, userId, expires }) {\n      return\n    },\n    async getSessionAndUser(sessionToken) {\n      return\n    },\n    async updateSession({ sessionToken }) {\n      return\n    },\n    async deleteSession(sessionToken) {\n      return\n    },\n    async createVerificationToken({ identifier, expires, token }) {\n      return\n    },\n    async useVerificationToken({ identifier, token }) {\n      return\n    },\n  }\n}\n')),(0,i.kt)("h3",{id:"required-methods"},"Required methods"),(0,i.kt)("p",null,"These methods are required for all sign in flows:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"createUser")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"getUser")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"getUserByEmail")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"getUserByAccount")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"linkAccount")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"createSession")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"getSessionAndUser")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"updateSession")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"deleteSession")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"updateUser"))),(0,i.kt)("p",null,"These methods are required to support email / passwordless sign in:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"createVerificationToken")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"useVerificationToken"))),(0,i.kt)("h3",{id:"unimplemented-methods"},"Unimplemented methods"),(0,i.kt)("p",null,"These methods will be required in a future release, but are not yet invoked:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"deleteUser")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"unlinkAccount"))))}p.isMDXComponent=!0}}]);