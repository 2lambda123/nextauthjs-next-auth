"use strict";(self.webpackChunknext_auth_docs=self.webpackChunknext_auth_docs||[]).push([[9280],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),u=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=u(e.components);return a.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(t),m=r,h=d["".concat(l,".").concat(m)]||d[m]||c[m]||i;return t?a.createElement(h,o(o({ref:n},p),{},{components:t})):a.createElement(h,o({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var u=2;u<i;u++)o[u]=t[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8215:function(e,n,t){var a=t(7294);n.Z=function(e){var n=e.children,t=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",hidden:t,className:r},n)}},6396:function(e,n,t){t.d(n,{Z:function(){return d}});var a=t(7462),r=t(7294),i=t(2389),o=t(9443);var s=function(){var e=(0,r.useContext)(o.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},l=t(9521),u=t(6010),p="tabItem_vU9c";function c(e){var n,t,a,i=e.lazy,o=e.block,c=e.defaultValue,d=e.values,m=e.groupId,h=e.className,f=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=d?d:f.map((function(e){var n=e.props;return{value:n.value,label:n.label}})),v=(0,l.lx)(g,(function(e,n){return e.value===n.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===c?c:null!=(n=null!=c?c:null==(t=f.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(a=f[0])?void 0:a.props.value;if(null!==k&&!g.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var b=s(),y=b.tabGroupChoices,w=b.setTabGroupChoices,S=(0,r.useState)(k),x=S[0],N=S[1],T=[],C=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var P=y[m];null!=P&&P!==x&&g.some((function(e){return e.value===P}))&&N(P)}var _=function(e){var n=e.currentTarget,t=T.indexOf(n),a=g[t].value;a!==x&&(C(n),N(a),null!=m&&w(m,a))},O=function(e){var n,t=null;switch(e.key){case"ArrowRight":var a=T.indexOf(e.currentTarget)+1;t=T[a]||T[0];break;case"ArrowLeft":var r=T.indexOf(e.currentTarget)-1;t=T[r]||T[T.length-1]}null==(n=t)||n.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.Z)("tabs",{"tabs--block":o},h)},g.map((function(e){var n=e.value,t=e.label;return r.createElement("li",{role:"tab",tabIndex:x===n?0:-1,"aria-selected":x===n,className:(0,u.Z)("tabs__item",p,{"tabs__item--active":x===n}),key:n,ref:function(e){return T.push(e)},onKeyDown:O,onFocus:_,onClick:_},null!=t?t:n)}))),i?(0,r.cloneElement)(f.filter((function(e){return e.props.value===x}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},f.map((function(e,n){return(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==x})}))))}function d(e){var n=(0,i.Z)();return r.createElement(c,(0,a.Z)({key:String(n)},e))}},9443:function(e,n,t){var a=(0,t(7294).createContext)(void 0);n.Z=a},5617:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return u},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return d},default:function(){return h}});var a=t(7462),r=t(3366),i=(t(7294),t(3905)),o=t(6396),s=t(8215),l=["components"],u={id:"prisma",title:"Prisma"},p="Prisma",c={unversionedId:"adapters/prisma",id:"adapters/prisma",isDocsHomePage:!1,title:"Prisma",description:"To use this Adapter, you need to install Prisma Client, Prisma CLI, and the separate @next-auth/prisma-adapter package:",source:"@site/docs/adapters/prisma.md",sourceDirName:"adapters",slug:"/adapters/prisma",permalink:"/adapters/prisma",editUrl:"https://github.com/nextauthjs/docs/edit/main/docs/adapters/prisma.md",tags:[],version:"current",lastUpdatedBy:"Bal\xe1zs Orb\xe1n",lastUpdatedAt:1643982356,formattedLastUpdatedAt:"2/4/2022",frontMatter:{id:"prisma",title:"Prisma"},sidebar:"docs",previous:{title:"Models",permalink:"/adapters/models"},next:{title:"FaunaDB",permalink:"/adapters/fauna"}},d=[{value:"Setup",id:"setup",children:[{value:"Create the Prisma schema",id:"create-the-prisma-schema",children:[],level:3},{value:"Create the database schema with Prisma Migrate",id:"create-the-database-schema-with-prisma-migrate",children:[],level:3},{value:"Generate Client",id:"generate-client",children:[],level:3}],level:2},{value:"Naming Conventions",id:"naming-conventions",children:[],level:2}],m={toc:d};function h(e){var n=e.components,t=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"prisma"},"Prisma"),(0,i.kt)("p",null,"To use this Adapter, you need to install Prisma Client, Prisma CLI, and the separate ",(0,i.kt)("inlineCode",{parentName:"p"},"@next-auth/prisma-adapter")," package:"),(0,i.kt)(o.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"npm",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm install next-auth @prisma/client @next-auth/prisma-adapter\nnpm install prisma --save-dev\n"))),(0,i.kt)(s.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add next-auth @prisma/client @next-auth/prisma-adapter\nyarn add prisma --dev\n")))),(0,i.kt)("p",null,"Configure your NextAuth.js to use the Prisma Adapter:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="pages/api/auth/[...nextauth].js"',title:'"pages/api/auth/[...nextauth].js"'},'import NextAuth from "next-auth"\nimport GoogleProvider from "next-auth/providers/google"\nimport { PrismaAdapter } from "@next-auth/prisma-adapter"\nimport { PrismaClient } from "@prisma/client"\n\nconst prisma = new PrismaClient()\n\nexport default NextAuth({\n  adapter: PrismaAdapter(prisma),\n  providers: [\n    GoogleProvider({\n      clientId: process.env.GOOGLE_CLIENT_ID,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n    }),\n  ],\n})\n')),(0,i.kt)("p",null,"Schema for the Prisma Adapter (",(0,i.kt)("inlineCode",{parentName:"p"},"@next-auth/prisma-adapter"),")"),(0,i.kt)("h2",{id:"setup"},"Setup"),(0,i.kt)("h3",{id:"create-the-prisma-schema"},"Create the Prisma schema"),(0,i.kt)("p",null,"You need to use at least Prisma 2.26.0. Create a schema file in ",(0,i.kt)("inlineCode",{parentName:"p"},"prisma/schema.prisma")," similar to this one:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="schema.prisma"',title:'"schema.prisma"'},'datasource db {\n  provider = "postgresql"\n  url      = env("DATABASE_URL")\n  shadowDatabaseUrl = env("SHADOW_DATABASE_URL") // Only needed when using a cloud provider that doesn\'t support the creation of new databases, like Heroku. Learn more: https://pris.ly/migrate-shadow\n}\n\ngenerator client {\n  provider        = "prisma-client-js"\n  previewFeatures = ["referentialActions"] // You won\'t need this in Prisma 3.X or higher.\n}\n\nmodel Account {\n  id                 String  @id @default(cuid())\n  userId             String\n  type               String\n  provider           String\n  providerAccountId  String\n  refresh_token      String?  @db.Text\n  access_token       String?  @db.Text\n  expires_at         Int?\n  token_type         String?\n  scope              String?\n  id_token           String?  @db.Text\n  session_state      String?\n  oauth_token_secret String?\n  oauth_token        String?\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([provider, providerAccountId])\n}\n\nmodel Session {\n  id           String   @id @default(cuid())\n  sessionToken String   @unique\n  userId       String\n  expires      DateTime\n  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\nmodel User {\n  id            String    @id @default(cuid())\n  name          String?\n  email         String?   @unique\n  emailVerified DateTime?\n  image         String?\n  accounts      Account[]\n  sessions      Session[]\n}\n\nmodel VerificationToken {\n  identifier String\n  token      String   @unique\n  expires    DateTime\n\n  @@unique([identifier, token])\n}\n')),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"When using the MySQL connector for Prisma, the ",(0,i.kt)("a",{parentName:"p",href:"https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string"},"Prisma ",(0,i.kt)("inlineCode",{parentName:"a"},"String")," type")," gets mapped to ",(0,i.kt)("inlineCode",{parentName:"p"},"varchar(191)")," which may not be long enough to store fields such as ",(0,i.kt)("inlineCode",{parentName:"p"},"id_token")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"Account")," model. This can be avoided by explicitly using the ",(0,i.kt)("inlineCode",{parentName:"p"},"Text")," type with ",(0,i.kt)("inlineCode",{parentName:"p"},"@db.Text"),"."))),(0,i.kt)("h3",{id:"create-the-database-schema-with-prisma-migrate"},"Create the database schema with Prisma Migrate"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"npx prisma migrate dev\n")),(0,i.kt)("p",null,"This will create an SQL migration file and execute it."),(0,i.kt)("p",null,"Note that you will need to specify your database connection string in the environment variable ",(0,i.kt)("inlineCode",{parentName:"p"},"DATABASE_URL"),". You can do this by setting it in a ",(0,i.kt)("inlineCode",{parentName:"p"},".env")," file at the root of your project."),(0,i.kt)("p",null,"To learn more about ",(0,i.kt)("a",{parentName:"p",href:"https://www.prisma.io/migrate"},"Prisma Migrate"),", check out the ",(0,i.kt)("a",{parentName:"p",href:"https://www.prisma.io/docs/concepts/components/prisma-migrate"},"Migrate docs"),"."),(0,i.kt)("h3",{id:"generate-client"},"Generate Client"),(0,i.kt)("p",null,"Once you have saved your schema, use the Prisma CLI to generate the Prisma Client:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"npx prisma generate\n")),(0,i.kt)("p",null,"To configure your database to use the new schema (i.e. create tables and columns) use the ",(0,i.kt)("inlineCode",{parentName:"p"},"prisma migrate")," command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"npx prisma migrate dev\n")),(0,i.kt)("h2",{id:"naming-conventions"},"Naming Conventions"),(0,i.kt)("p",null,"If mixed snake_case and camelCase column names is an issue for you and/or your underlying database system, we recommend using Prisma's ",(0,i.kt)("inlineCode",{parentName:"p"},"@Map()"),"(",(0,i.kt)("a",{parentName:"p",href:"https://www.prisma.io/docs/concepts/components/prisma-schema/names-in-underlying-database"},"Prisma Docs"),") feature to change the field names. This won't affect NextAuth.js, but will allow you to customize the column names to whichever naming convention you wish."),(0,i.kt)("p",null,"For example, moving to ",(0,i.kt)("inlineCode",{parentName:"p"},"snake_case")," and plural table names."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="schema.prisma"',title:'"schema.prisma"'},'model Account {\n  id                 String  @id @default(cuid())\n  userId             String  @map("user_id")\n  type               String\n  provider           String\n  providerAccountId  String  @map("provider_account_id")\n  refresh_token      String? @db.Text\n  access_token       String? @db.Text\n  expires_at         Int?\n  token_type         String?\n  scope              String?\n  id_token           String? @db.Text\n  session_state      String?\n  oauth_token_secret String?\n  oauth_token        String?\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([provider, providerAccountId])\n  @@map("accounts")\n}\n\nmodel Session {\n  id           String   @id @default(cuid())\n  sessionToken String   @unique @map("session_token")\n  userId       String   @map("user_id")\n  expires      DateTime\n  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map("sessions")\n}\n\nmodel User {\n  id            String    @id @default(cuid())\n  name          String?\n  email         String?   @unique\n  emailVerified DateTime? @map("email_verified")\n  image         String?\n  accounts      Account[]\n  sessions      Session[]\n\n  @@map("users")\n}\n\nmodel VerificationToken {\n  identifier String\n  token      String   @unique\n  expires    DateTime\n\n  @@unique([identifier, token])\n  @@map("verificationtokens")\n}\n')))}h.isMDXComponent=!0}}]);