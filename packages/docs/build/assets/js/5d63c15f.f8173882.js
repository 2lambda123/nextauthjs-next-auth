"use strict";(self.webpackChunknext_auth_docs=self.webpackChunknext_auth_docs||[]).push([[3846],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),l=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(r),m=a,v=d["".concat(u,".").concat(m)]||d[m]||s[m]||o;return r?n.createElement(v,i(i({ref:t},p),{},{components:r})):n.createElement(v,i({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3150:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),i=["components"],c={id:"azure-ad-b2c",title:"Azure Active Directory B2C"},u=void 0,l={unversionedId:"providers/azure-ad-b2c",id:"version-v3/providers/azure-ad-b2c",isDocsHomePage:!1,title:"Azure Active Directory B2C",description:"Documentation",source:"@site/versioned_docs/version-v3/providers/azure-ad-b2c.md",sourceDirName:"providers",slug:"/providers/azure-ad-b2c",permalink:"/v3/providers/azure-ad-b2c",editUrl:"https://github.com/nextauthjs/docs/edit/main/versioned_docs/version-v3/providers/azure-ad-b2c.md",tags:[],version:"v3",lastUpdatedBy:"Bal\xe1zs Orb\xe1n",lastUpdatedAt:1643982356,formattedLastUpdatedAt:"2/4/2022",frontMatter:{id:"azure-ad-b2c",title:"Azure Active Directory B2C"},sidebar:"version-v3/docs",previous:{title:"Auth0",permalink:"/v3/providers/auth0"},next:{title:"Basecamp",permalink:"/v3/providers/basecamp"}},p=[{value:"Documentation",id:"documentation",children:[],level:2},{value:"Configuration",id:"configuration",children:[],level:2},{value:"Options",id:"options",children:[],level:2},{value:"Example",id:"example",children:[],level:2}],s={toc:p};function d(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"documentation"},"Documentation"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-auth-code-flow"},"https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-auth-code-flow")),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/active-directory-b2c/tutorial-create-tenant"},"https://docs.microsoft.com/en-us/azure/active-directory-b2c/tutorial-create-tenant")),(0,o.kt)("h2",{id:"options"},"Options"),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"Azure Active Directory Provider")," comes with a set of default options:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/nextauthjs/next-auth/blob/ead715219a5d7a6e882a6ba27fa56b03954d062d/src/providers/azure-ad-b2c.js"},"Azure Active Directory Provider options"))),(0,o.kt)("p",null,"You can override any of the options to suit your own use case."),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"In ",(0,o.kt)("a",{parentName:"li",href:"https://portal.azure.com/"},"https://portal.azure.com/")," -> Azure Active Directory create a new App Registration."),(0,o.kt)("li",{parentName:"ul"},"Make sure to remember / copy",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Application (client) ID"),(0,o.kt)("li",{parentName:"ul"},"Directory (tenant) ID"))),(0,o.kt)("li",{parentName:"ul"},"When asked for a redirection URL, use http://localhost:3000/api/auth/callback/azure-ad-b2c"),(0,o.kt)("li",{parentName:"ul"},"Create a new secret and remember / copy its value immediately, it will disappear.")),(0,o.kt)("p",null,"In ",(0,o.kt)("inlineCode",{parentName:"p"},".env.local")," create the following entries:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"AZURE_CLIENT_ID=<copy Application (client) ID here>\nAZURE_CLIENT_SECRET=<copy generated secret value here>\nAZURE_TENANT_ID=<copy the tenant id here>\n")),(0,o.kt)("p",null,"In ",(0,o.kt)("inlineCode",{parentName:"p"},"pages/api/auth/[...nextauth].js")," find or add the AZURE entries:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import Providers from 'next-auth/providers';\n...\nproviders: [\n  Providers.AzureADB2C({\n    clientId: process.env.AZURE_CLIENT_ID,\n    clientSecret: process.env.AZURE_CLIENT_SECRET,\n    scope: 'offline_access User.Read',\n    tenantId: process.env.AZURE_TENANT_ID,\n  }),\n]\n...\n\n")))}d.isMDXComponent=!0}}]);