"use strict";(self.webpackChunknext_auth_docs=self.webpackChunknext_auth_docs||[]).push([[5237],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},T={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,E=u["".concat(p,".").concat(m)]||u[m]||T[m]||o;return n?r.createElement(E,s(s({ref:t},d),{},{components:n})):r.createElement(E,s({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6202:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return d},default:function(){return u}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),s=["components"],i={id:"postgres",title:"Postgres"},p=void 0,c={unversionedId:"adapters/typeorm/postgres",id:"version-v3/adapters/typeorm/postgres",isDocsHomePage:!1,title:"Postgres",description:"Schema for a Postgres database.",source:"@site/versioned_docs/version-v3/adapters/typeorm/postgres.md",sourceDirName:"adapters/typeorm",slug:"/adapters/typeorm/postgres",permalink:"/v3/adapters/typeorm/postgres",editUrl:"https://github.com/nextauthjs/docs/edit/main/versioned_docs/version-v3/adapters/typeorm/postgres.md",tags:[],version:"v3",lastUpdatedBy:"Bal\xe1zs Orb\xe1n",lastUpdatedAt:1643982356,formattedLastUpdatedAt:"2/4/2022",frontMatter:{id:"postgres",title:"Postgres"},sidebar:"version-v3/docs",previous:{title:"MySQL",permalink:"/v3/adapters/typeorm/mysql"},next:{title:"Microsoft SQL Server",permalink:"/v3/adapters/typeorm/mssql"}},d=[],T={toc:d};function u(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},T,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Schema for a Postgres database."),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"When using a Postgres database with the default adapter (TypeORM) all properties of type ",(0,o.kt)("inlineCode",{parentName:"p"},"timestamp")," are transformed to ",(0,o.kt)("inlineCode",{parentName:"p"},"timestamp with time zone"),"/",(0,o.kt)("inlineCode",{parentName:"p"},"timestamptz")," and all timestamps are stored in UTC."),(0,o.kt)("p",{parentName:"div"},"This transform is also applied to any properties of type ",(0,o.kt)("inlineCode",{parentName:"p"},"timestamp")," when using custom models."))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE accounts\n  (\n    id                   SERIAL,\n    compound_id          VARCHAR(255) NOT NULL,\n    user_id              INTEGER NOT NULL,\n    provider_type        VARCHAR(255) NOT NULL,\n    provider_id          VARCHAR(255) NOT NULL,\n    provider_account_id  VARCHAR(255) NOT NULL,\n    refresh_token        TEXT,\n    access_token         TEXT,\n    access_token_expires TIMESTAMPTZ,\n    created_at           TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    updated_at           TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    PRIMARY KEY (id)\n  );\n\nCREATE TABLE sessions\n  (\n    id            SERIAL,\n    user_id       INTEGER NOT NULL,\n    expires       TIMESTAMPTZ NOT NULL,\n    session_token VARCHAR(255) NOT NULL,\n    access_token  VARCHAR(255) NOT NULL,\n    created_at    TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    updated_at    TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    PRIMARY KEY (id)\n  );\n\nCREATE TABLE users\n  (\n    id             SERIAL,\n    name           VARCHAR(255),\n    email          VARCHAR(255),\n    email_verified TIMESTAMPTZ,\n    image          TEXT,\n    created_at     TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    updated_at     TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    PRIMARY KEY (id)\n  );\n\nCREATE TABLE verification_requests\n  (\n    id         SERIAL,\n    identifier VARCHAR(255) NOT NULL,\n    token      VARCHAR(255) NOT NULL,\n    expires    TIMESTAMPTZ NOT NULL,\n    created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    PRIMARY KEY (id)\n  );\n\nCREATE UNIQUE INDEX compound_id\n  ON accounts(compound_id);\n\nCREATE INDEX provider_account_id\n  ON accounts(provider_account_id);\n\nCREATE INDEX provider_id\n  ON accounts(provider_id);\n\nCREATE INDEX user_id\n  ON accounts(user_id);\n\nCREATE UNIQUE INDEX session_token\n  ON sessions(session_token);\n\nCREATE UNIQUE INDEX access_token\n  ON sessions(access_token);\n\nCREATE UNIQUE INDEX email\n  ON users(email);\n\nCREATE UNIQUE INDEX token\n  ON verification_requests(token);\n\n")))}u.isMDXComponent=!0}}]);