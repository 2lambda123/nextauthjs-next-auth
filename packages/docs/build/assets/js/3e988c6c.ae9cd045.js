"use strict";(self.webpackChunknext_auth_docs=self.webpackChunknext_auth_docs||[]).push([[2249],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,h=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(h,s(s({ref:t},c),{},{components:n})):r.createElement(h,s({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var u=2;u<o;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2853:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),s=["components"],i={id:"ldap-auth-example",title:"LDAP Authentication"},l=void 0,u={unversionedId:"tutorials/ldap-auth-example",id:"version-v3/tutorials/ldap-auth-example",isDocsHomePage:!1,title:"LDAP Authentication",description:"NextAuth.js provides the ability to setup a custom Credential provider which we can take advantage of to authenticate users against an existing LDAP server.",source:"@site/versioned_docs/version-v3/tutorials/ldap-auth.md",sourceDirName:"tutorials",slug:"/tutorials/ldap-auth-example",permalink:"/v3/tutorials/ldap-auth-example",editUrl:"https://github.com/nextauthjs/docs/edit/main/versioned_docs/version-v3/tutorials/ldap-auth.md",tags:[],version:"v3",lastUpdatedBy:"Bal\xe1zs Orb\xe1n",lastUpdatedAt:1643982356,formattedLastUpdatedAt:"2/4/2022",frontMatter:{id:"ldap-auth-example",title:"LDAP Authentication"}},c=[],p={toc:c};function d(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"NextAuth.js provides the ability to setup a ",(0,o.kt)("a",{parentName:"p",href:"/configuration/providers/credentials"},"custom Credential provider")," which we can take advantage of to authenticate users against an existing LDAP server."),(0,o.kt)("p",null,"You will need an additional dependency, ",(0,o.kt)("inlineCode",{parentName:"p"},"ldapjs"),", which you can install by running ",(0,o.kt)("inlineCode",{parentName:"p"},"npm install ldapjs"),"."),(0,o.kt)("p",null,"Then you must setup the ",(0,o.kt)("inlineCode",{parentName:"p"},"Providers.Credentials()")," provider key like so:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="[...nextauth].js"',title:'"[...nextauth].js"'},'const ldap = require("ldapjs")\nimport NextAuth from "next-auth"\nimport Providers from "next-auth/providers"\n\nexport default NextAuth({\n  providers: [\n    Providers.Credentials({\n      name: "LDAP",\n      credentials: {\n        username: { label: "DN", type: "text", placeholder: "" },\n        password: { label: "Password", type: "password" },\n      },\n      async authorize(credentials, req) {\n        // You might want to pull this call out so we\'re not making a new LDAP client on every login attemp\n        const client = ldap.createClient({\n          url: process.env.LDAP_URI,\n        })\n\n        // Essentially promisify the LDAPJS client.bind function\n        return new Promise((resolve, reject) => {\n          client.bind(credentials.username, credentials.password, (error) => {\n            if (error) {\n              console.error("Failed")\n              reject()\n            } else {\n              console.log("Logged in")\n              resolve({\n                username: credentials.username,\n                password: credentials.password,\n              })\n            }\n          })\n        })\n      },\n    }),\n  ],\n  callbacks: {\n    async jwt(token, user, account, profile, isNewUser) {\n      const isSignIn = user ? true : false\n      if (isSignIn) {\n        token.username = user.username\n        token.password = user.password\n      }\n      return token\n    },\n    async session(session, user) {\n      return { ...session, user: { username: user.username } }\n    },\n  },\n  secret: process.env.NEXTAUTH_SECRET,\n  jwt: {\n    secret: process.env.NEXTAUTH_SECRET,\n    encryption: true, // Very important to encrypt the JWT, otherwise you\'re leaking username+password into the browser\n  },\n})\n')),(0,o.kt)("p",null,"The idea is that once one is authenticated with the LDAP server, one can pass through both the username/DN and password to the JWT stored in the browser."),(0,o.kt)("p",null,"This is then passed back to any API routes and retrieved as such:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/pages/api/doLDAPWork.js"',title:'"/pages/api/doLDAPWork.js"'},"token = await jwt.getToken({\n  req,\n  secret: process.env.NEXTAUTH_SECRET,\n})\nconst { username, password } = token\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Thanks to ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Winwardo"},"Winwardo")," for the code example")))}d.isMDXComponent=!0}}]);