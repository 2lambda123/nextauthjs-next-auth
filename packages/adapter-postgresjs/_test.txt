#!/usr/bin/env bash

CONTAINER_NAME=authjs-pg-test

docker run -d --rm \
  --name ${CONTAINER_NAME} \
  -e POSTGRES_DB=adapter-postgres-test \
  -e POSTGRES_USER=pg \
  -e POSTGRES_PASSWORD=pg \
  -p 5432:5432 \
  -v "$(pwd)"/schema.sql:/docker-entrypoint-initdb.d/schema.sql \
  postgres:latest

echo "waiting 5s for db to start..."
sleep 5

# Always stop container, but exit with 1 when tests are failing
if vitest run -c ../utils/vitest.config.ts; then
  docker stop ${CONTAINER_NAME}
else
  docker stop ${CONTAINER_NAME} && exit 1
fi


#!/usr/bin/env bash

echo "Initializing container for PostgreSQL tests."

PGUSER=pgjs
PGPASSWORD=pgjs
PGDATABASE=pgjs
PGPORT=5432
PG_CONTAINER_NAME=authjs-postgresjs-test

docker run -d --rm \
  -e POSTGRES_USER=${PGUSER} \
  -e POSTGRES_PASSWORD=${PGPASSWORD} \
  -e POSTGRES_DB=${PGDATABASE} \
  -e POSTGRES_HOST_AUTH_METHOD=trust \
  --name "${PG_CONTAINER_NAME}" \
  -p ${PGPORT}:5432 \
  -v "$(pwd)"/schema.sql:/docker-entrypoint-initdb.d/schema.sql \
  postgres:latest

echo "Waiting 5s for db to start..." && sleep 5

if vitest run -c ../utils/vitest.config.ts ./test/index.test.ts; then
  docker stop ${PG_CONTAINER_NAME}
else
  docker stop ${PG_CONTAINER_NAME} && exit 1
fi
